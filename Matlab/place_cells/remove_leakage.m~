clear all;
close all;
%%
dist_threshold=45; % could be twiked with CA1 data
dist_step1=35;
dist_step2=25;
dist_step3=15;
sim_threshold1=0.9;
sim_threshold2=0.92;
sim_threshold3=0.96;
sim_threshold4=0.97;

[behavior_filepaths, temp]=uigetfile('*.mat', 'Chose files to load:','MultiSelect','on');
% should find the distance first

for f=1:size(behavior_filepaths,2)
load(behavior_filepaths{f});
leak_id=[];
pf_count=0;
center_pos=[];
pf_id=[];
pf_simval=[];
  for i=1:size(sig_PFs,2)  
    for j=1:size(sig_PFs,1)
        if ~isempty(sig_PFs{j,i})
             pf_count=pf_count+1;
             pf_id=[pf_id i];
%            sig_PF_M(:,:,pf_count)=sig_PFs{j,i};
             [center_pos(pf_count,1) center_pos(pf_count,2)]=find_center(cell_ROI(:,:,i));  
             
             figure;
             imagesc(sig_PFs{j,i}');
             title(num2str([i j]))
             
        end
    end
  end
  distance= pdist(center_pos);
  dis_M=zeros(size(center_pos,1)-1,size(center_pos,1));
  for i=1:size(center_pos,1)-1
      for j=i+1:size(center_pos,1)
      dis_M(i,j)=distance((i-1)*size(center_pos,1)+j-i*(i+1)/2);
      end
      
      
  end
  
  %% find ROIs that are close to each other
   neighbor_id=[]; 
  [neighbor_id(:,1) neighbor_id(:,2)]=find(dis_M<dist_threshold);% & dis_M>0);
  true_neighbor_id=[];
  true_neighbor_id=neighbor_id(find(neighbor_id(:,1)<neighbor_id(:,2)),:);
  

    
  for i=1:size(true_neighbor_id,1)
      
      if i==1
      if pf_id(true_neighbor_id(i,1))~=pf_id(true_neighbor_id(i,2))
      id_pf1=1; id_pf2=1;
     pf1= sig_PFs{id_pf1,pf_id(true_neighbor_id(i,1))}';
     pf2= sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}';
     
      else
      id_pf1=1; id_pf2=2;
      pf1= sig_PFs{id_pf1,pf_id(true_neighbor_id(i,1))}';
      pf2= sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}';         
          
      end
      
      else
          
      if pf_id(true_neighbor_id(i,1))~=pf_id(true_neighbor_id(i,2)) 
          if true_neighbor_id(i-1,1)== true_neighbor_id(i,1) & pf_id(true_neighbor_id(i-1,2))== pf_id(true_neighbor_id(i,2))
            id_pf1=1; id_pf2=2;
            pf1= sig_PFs{id_pf1,pf_id(true_neighbor_id(i,1))}';
            pf2= sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}';
          else 
            id_pf1=1; id_pf2=1;
            pf1= sig_PFs{id_pf1,pf_id(true_neighbor_id(i,1))}';
            pf2= sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}';   
          end
     
        else
        id_pf1=1; id_pf2=2;
        pf1= sig_PFs{id_pf1,pf_id(true_neighbor_id(i,1))}';
        pf2= sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}';         
          
      end
          
          
      end
      
   %ssimval = ssim(pf1,pf2);
   ssimval=find_co(pf_id(true_neighbor_id(i,1)),pf_id(true_neighbor_id(i,2)),id_pf1,id_pf2,sig_PFs);
   pf_simval=[pf_simval ssimval];
   
      id1=true_neighbor_id(i,1);
      id2=true_neighbor_id(i,2);
      pf_id(true_neighbor_id(i,1))
      pf_id(true_neighbor_id(i,2))
      cur_dis=dis_M(id1,id2)
      ssimval
      overlap=0;
      
      if cur_dis>dist_step1 & ssimval>sim_threshold1
          overlap=1;
          
      elseif cur_dis>dist_step2 & cur_dis<=dist_step1 & ssimval>sim_threshold2
          overlap=1;
          
      elseif cur_dis>dist_step3 & cur_dis<=dist_step2 & ssimval>sim_threshold3
          overlap=1; 
          
      elseif cur_dis<dist_step3 & ssimval>sim_threshold4
          overlap=1;
          
      end
          
      
   
     
   %% remove leakage inbetween animals
  if overlap==1   %ssimval>sim_threshold
%       step down the value to pickout possible same pf 

      
%       pf_id(true_neighbor_id(i,1))
%       pf_id(true_neighbor_id(i,2))
%       sim_score=dis_M(true_neighbor_id(i,1),true_neighbor_id(i,2))*ssimval
%       
%       if sim_score<22
    sig_PFs{id_pf2,pf_id(true_neighbor_id(i,2))}=[];  
    sig_PFs_with_noise{id_pf2,pf_id(true_neighbor_id(i,2))}=[]; 
    number_of_PFs(pf_id(true_neighbor_id(i,2)))=number_of_PFs(pf_id(true_neighbor_id(i,2)))-1; 
    PF_end_bins(id_pf2,pf_id(true_neighbor_id(i,2)))=nan;
    PF_start_bins(id_pf2,pf_id(true_neighbor_id(i,2)))=nan;
    PF_PVALS(id_pf2,pf_id(true_neighbor_id(i,2)))=nan;
    PF_rate(id_pf2,pf_id(true_neighbor_id(i,2)))=nan;
    PF_width(id_pf2,pf_id(true_neighbor_id(i,2)))=[];
    
    figure;
    subplot(2,1,1); imagesc(pf1);title(num2str(pf_id(true_neighbor_id(i,1))));
    subplot(2,1,2); imagesc(pf2);title(num2str(pf_id(true_neighbor_id(i,2))));
    
    leak_id=[leak_id pf_id(true_neighbor_id(i,2))];
%       end
  end
      
  end
    
  
  
end

%% usful function
%pdist
